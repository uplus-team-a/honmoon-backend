logging:
  level:
    root: info
    org.springframework.security: info

management:
  endpoints:
    web:
      exposure:
        include: health, info, metrics, prometheus
  metrics:
    enable:
      all: true
  prometheus:
    metrics:
      export:
        enabled: true

server:
  tomcat:
    max-connections: 2000
    threads:
      max: 200
      min-spare: 10
    uri-encoding: UTF-8
    max-swallow-size: -1
    max-http-form-post-size: -1
    connection-timeout: 5000
    keep-alive-timeout: 65000

server.shutdown: graceful
spring.lifecycle.timeout-per-shutdown-phase: 30s

spring:
  docker:
    compose:
      enabled: false
  flyway:
    baseline-on-migrate: true
    enabled: true
    locations: classpath:db/migration
  ai:
    openai:
      api-key: ${OPENAI_API_KEY:}
      chat:
        options:
          model: gpt-4o-mini
          temperature: 0.1
    gemini:
      api-key: ${GEMINI_API_KEY:}
      chat:
        completions-path: /v1beta/models/gemini-2.5-flash:generateContent
        base-url: https://generativelanguage.googleapis.com
        options:
          model: gemini-2.5-flash
          temperature: 0.1
  cloud:
    gcp:
      storage:
        project-id: ${GCP_PROJECT_ID:lexical-rock-465404-f3}
        bucket: ${GCP_BUCKET_NAME:springboot-honmoon-access}

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: ${GOOGLE_REDIRECT_URI:https://honmoon-api.site/api/auth/google/callback}
            scope: profile,email,openid
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub

  jpa:
    open-in-view: false
    show-sql: false
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        format_sql: true
        query.in_clause_parameter_padding: true
        default_batch_fetch_size: 50
        connection.provider_disables_autocommit: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  datasource:
    auto-commit: false
    connection-timeout: 3000
    max-lifetime: 50000
    pool-name: HikariCP-Writer
---
spring:
  config:
    activate:
      on-profile: local
  flyway:
    enabled: false
  datasource:
    driver-class-name: org.postgresql.Driver
    jdbc-url: ${POSTGRES_URL}
    username: ${POSTGRES_USERNAME}
    password: ${POSTGRES_PASSWORD}
  sql:
    init:
      data-locations: classpath:db/data.sql
      schema-locations: classpath:db/schema.sql
      mode: never
---
spring:
  config:
    activate:
      on-profile: dev
  flyway:
    enabled: false
  datasource:
    driver-class-name: org.postgresql.Driver
    jdbc-url: ${POSTGRES_URL}
    username: ${POSTGRES_USERNAME}
    password: ${POSTGRES_PASSWORD}
  sql:
    init:
      data-locations: classpath:db/data.sql
      schema-locations: classpath:db/schema.sql
      mode: never
